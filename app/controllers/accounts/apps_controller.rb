class Accounts::AppsController < ApplicationController
  APP_ID = 166687
  before_action :set_app, only: %i[show index]
  before_action :set_vcs_integration, only: [:show, :create_release_branch, :create_pull_request]

  def new
    @app = current_organization.apps.new
  end

  def create
    @app = current_organization.apps.new(app_params)

    respond_to do |format|
      if @app.save
        format.html { redirect_to accounts_organization_app_path(current_organization, @app), notice: "App was successfully created." }
        format.json { render :show, status: :created, location: @app }
      else
        format.html { render :new, status: :unprocessable_entity }
        format.json { render json: @app.errors, status: :unprocessable_entity }
      end
    end
  end

  def create_release_branch
    random_str = (0...8).map { (rand(65..90)).chr }.join
    Integrations::Github::Api
      .new(APP_ID, @version_control_integration.installation_id)
      .create_branch!(@version_control_integration.active_repo, @app.working_branch, "release-v#{random_str}")
  end

  def create_pull_request
    title = "PR generated by Tramline"
    body = "Automatically generated by Tramline. Good luck."

    Integrations::Github::Api
      .new(APP_ID, @version_control_integration.installation_id)
      .create_pr!(@version_control_integration.active_repo, @app.working_branch, "release-vOVYQKQSK", title, body)
  end

  def show
  end

  def index
  end

  private

  def set_vcs_integration
    set_app
    @version_control_integration = @app.integrations.first
  end

  def set_app
    @app = current_organization.apps.friendly.find(params[:id])
  end

  def app_params
    params.require(:app).permit(:name, :description, :bundle_identifier, :working_branch)
  end
end
